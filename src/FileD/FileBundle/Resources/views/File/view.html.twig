<!-- Rendered by userBundle:Index : display all files-->

<script>
	var paramIdFile = 0;
</script>
            	<!-- Display home content FILES-->
            	<div class="well">
            		<fieldset >
		 				<legend><p>{% trans %}file.list.title{% endtrans %}</p> <small id="show"><a href="#seen_files" onclick="showSeenFiles()"> {% trans %} file.list.title.small.seen {% endtrans %}</a></small>
		 				<small id="hide"><a href="" onclick="hideSeenFiles()"> {% trans %} file.list.title.small.seen.not {% endtrans %}</a></small>
		 						
		 				</legend>
		 				
            		    <ul class="breadcrumb">
						    <li {% if breadcrumb|length == 0 %}
						    		class="active">{% trans %}file.list.breadcrumb{% endtrans %}
						    	{% else %}
						    		><a href="{{ path('user_index') }}">{% trans %}file.list.breadcrumb{% endtrans %}</a>
						    	{% endif %}
						    	<span class="divider">/</span>
						    </li>
						    {% set i = 1 %}
							{% for row in breadcrumb %}
		            			<li 
		            				{% if i==breadcrumb|length %}
		            					class="active">{{ row['name'] }}
		            				{% else %}
		            					><a href="{{ path('user_index') }}?file={{ row['id'] }}">{{ row['name'] }}</a>
		            				{% endif %} <span class="divider">/</span></li>
		            			{% set i = i + 1 %}
							{% endfor %}
					    </ul>
					    
		            	<div class="row">
	            			
		            		<div class="span3 offset8">
		            			{% if enable_upload =="1" and parent is null or not parent.external %}
			            			<a href="#addFileModal" data-toggle="modal" ><i class="icon-plus"></i>{% trans %}file.list.addfile{% endtrans %}</a><br/>
			            			<a href="#" onclick="addRepository()" ><i class="icon-plus"></i>{% trans %}file.list.addrepository{% endtrans %}</a>
		            				
			            		{% endif %}
		            		</div>
		            			
		    				{% if files is empty %}
		    					<p class="text-error span2 offset2">{% trans %}file.list.nofilesfound{% endtrans %}</p>
		    				{% else %}
				            	<table id="filestable" class="table table-striped span10 tablesorter unseen" >
				            		<thead>
				            			<tr>
				            				<th></th>
				            				<th class="">{% trans %}file.list.name{% endtrans %}</th>
				            				<th class="header">{% trans %}file.list.size{% endtrans %}</th>
				            				<th class="">{% trans %}file.list.addedon{% endtrans %}</th>
				            				<th class="">{% trans %}file.list.addedby{% endtrans %}</th>
				            				<th>{% trans %}file.list.actions{% endtrans %}</th>	
				            			</tr>
				            		</thead>
				            		<tbody>
				    					{% for file in files %}
				    						<tr class="tr{{ file.id }}">
				    							<td>
				    								<input type="checkbox" id="not_seen_box" value="{{ file.id }}"/>
				    							</td>
				    							<td>
				    								{% if file.isDirectory() %}
				    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
				    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
				    											<i class="icon-pencil" style="float:left"></i>
				    										</a>  
				    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}" >
				    											<span class="edit{{ file.id }}">{{ file.name }}</span>
				    										</a>
				    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
				    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.ok{% endtrans %}</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.cancel{% endtrans %}</a>
				    										
				    									{% else %}
				    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}">
				    											<span>{{ file.name }}</span>
				    										</a>
				    														    									
				    									{% endif %}
				    								{% else %}
				    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
				    										
				    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
				    											<i class="icon-pencil" style="float:left"></i>
				    										</a>   
				    										<span class="edit{{ file.id }}">{{ file.name }}</span>
				    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
				    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.ok{% endtrans %}</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.cancel{% endtrans %}</a>
				    										
				    									{% else %}
				    										<span>{{ file.name }}</span>
				    									{% endif %}
				    								{% endif %}
				    							
				    							</td>
				    							<td>
				    								{% if file.isDirectory()%}
				    								
				    									{% if file.size > 0 %}
				    										<!--  Calculating the rendering of size XXX or X Ko or X Mo or X Go or X To-->
					    									{% set size = file.size %}
					    									{% if size < 1000 %}
					    										{{ size|number_format(2, '.', ' ')}} {% trans %} file.size.unit {% endtrans %}
					    									{% elseif size <1000000 %}
					    										{% set size = file.size/1000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.kilo {% endtrans %}
					    									{% elseif size <1000000000 %}
					    										{% set size = file.size/1000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.mega {% endtrans %}
					    									{% elseif size <1000000000000 %}
					    										{% set size = file.size/1000000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.giga {% endtrans %}
					    									{% else %}
					    										{% set size = file.size/1000000000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.tera {% endtrans %}
					    									{% endif %}
				    									{% else %}
				    										{% render "FileDFileBundle:File:getSizeDirectory" with {'id' : file.id} %}
				    									{% endif %}
				    									
				    								{% else %}
				    									<!--  Calculating the rendering of size XXX or X Ko or X Mo or X Go or X To-->
				    									{% set size = file.size %}
				    									{% if size < 1000 %}
				    										{{ size|number_format(2, '.', ' ')}} {% trans %} file.size.unit {% endtrans %}
				    									{% elseif size <1000000 %}
				    										{% set size = file.size/1000 %}
				    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.kilo {% endtrans %}
				    									{% elseif size <1000000000 %}
				    										{% set size = file.size/1000000 %}
				    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.mega {% endtrans %}
				    									{% elseif size <1000000000000 %}
				    										{% set size = file.size/1000000000 %}
				    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.giga {% endtrans %}
				    									{% else %}
				    										{% set size = file.size/1000000000000 %}
				    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.tera {% endtrans %}
				    									{% endif %}
				    								{% endif %}
				    							</td>
				    							<td>{%if app.request.locale == "fr" %}
				    									{{ file.dateCreation|date('d-m-Y H:i:s') }}
				    								{%else %}
				    									{{ file.dateCreation|date('Y-m-d H:i:s') }}
				    								{% endif %}
				    							</td>
				    							<td>{{ file.author.username }}</td>
				    							<td>
				    								<a href="{{ path('file_download' , {'id':file.id} ) }}" title="{% trans %} file.list.name.download {% endtrans %}"><i class="icon-download"></i></a>
				    								
				    								{% render "FileDFileBundle:File:viewFile" with {'id' : file.id } %}
				    								
				    								{% if (file.author.username == app.user.username and enable_share =="1") or is_granted("ROLE_ADMIN") %}
				    									{% set titleShare %}{% trans %} file.share.ahref.title {% endtrans %}{% set i =1 %} {% for user in file.usersShare %}{{ user.username }}{% if i<file.usersShare|length %},{% endif %}{% set i=i+1 %} {% endfor %}{% endset %}
				    									<a title="{{ titleShare }}" href="#shareModal" data-toggle="modal" onclick="share({{ file.id }})"><i class="icon-share"></i></a>
				    								{% endif %}
				    								
				    								{% if file.author.username == app.user.username or  is_granted("ROLE_ADMIN")%}
				    									<a href="" title="{% trans %} file.list.name.delete {% endtrans %}" onclick="deleteFile({{ file.id }},{% if file.external %}true{% else %}false{% endif %})"><i class="icon-remove"></i></a>
				    								{% endif %}
				    								
				    								{% render "FileDFileBundle:File:isMarkAsSeenFile" with {'id' : file.id} %}
				    								
				    								{% if file.getExternal() and file.isDirectory() %}
				    									<a href="" title="{% trans %} file.list.name.refresh {% endtrans %}" onclick="refresh({{ file.id }})"><i class="icon-refresh"></i></a>
				    								{% endif %}
				    								
				    								<a href="#publicLinkModal{{ file.id }}" data-toggle="modal"  title="{% trans %} file.list.name.link {% endtrans %}"><i class="icon-globe"></i></a>
				    								
									    			<!-- Public Link Modal -->
													<div id="publicLinkModal{{ file.id }}" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="publicLinkModal" aria-hidden="true">
														<div class="modal-header">
															<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
															<h3 id="myModalLabel">{% trans %}file.list.name.link{% endtrans %}</h3>
														</div>
														<div class="modal-body">
															<small><a href="{{ url('file_public_link' , {'hash':file.hash})}}">{{ url('file_public_link' , {'hash':file.hash})}}</a>
															</small>
														</div>
														<div class="modal-footer">
															<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
														</div>
													</div>
				    								
				    							</td>
				    						</tr>
				    					{% endfor %}
				    				</tbody>
				    			</table>
				    			
				    			
				    			<div class="span5">
				    				<!-- List of all selectable actions -->
				            		<input type="checkbox" id="selectall" onclick="selectAll(0)"/>
				            		{% trans %} file.list.all.selectall {% endtrans %}
				            		<!-- Share/Delete/MarkAsSeen -->	
				            		<a title="{% trans %}file.list.all.share{% endtrans %}" href="#shareAllModal" data-toggle="modal" onclick="shareAll()"><i class="icon-share"></i></a>
				            		<a title="{% trans %}file.list.all.delete{% endtrans %}" href="" onclick="deleteAll(0)"><i class="icon-remove"></i></a>
				            		<a title="{% trans %}file.list.all.mark{% endtrans %}" href="" onclick="markAll(1,1)"><i class="icon-ok-circle"></i></a>
				            	</div>
				            	
			            	</div>
		    				{% endif %}	
		    				
			    		</div>
					    
		    		</fieldset>
    			</div>
    			
    			<div class="well" id="seen_files">
    				<fieldset>
    					<legend>
    						<p>{% trans %}file.list.title.seen{% endtrans %}</p> <small id="hide"><a href="" onclick="hideSeenFiles()"> {% trans %} file.list.title.small.seen.not {% endtrans %}</a></small>
    					</legend>
    					<div class="row">
    						{% if seen_files is empty %}
			    					<p class="text-error span2 offset2">{% trans %}file.list.nofilesfound{% endtrans %}</p>
			    				{% else %}
					            	<table id="filestable" class="table table-striped span10 tablesorter seen" >
					            		<thead>
				            			<tr>
				            				<th></th>
				            				<th class="">{% trans %}file.list.name{% endtrans %}</th>
				            				<th class="header">{% trans %}file.list.size{% endtrans %}</th>
				            				<th class="">{% trans %}file.list.addedon{% endtrans %}</th>
				            				<th class="">{% trans %}file.list.addedby{% endtrans %}</th>
				            				<th>{% trans %}file.list.actions{% endtrans %}</th>	
				            			</tr>
				            		</thead>
					            		<tbody>
					    					{% for file in seen_files %}
					    						<tr class="tr{{ file.id }}">
					    							<td>
					    								<input type="checkbox" id="box_seen" value="{{ file.id }}"/>
					    							</td>
					    							<td>
					    								{% if file.isDirectory() %}
					    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
					    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
					    											<i class="icon-pencil" style="float:left"></i>
					    										</a>  
					    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}" >
					    											<span class="edit{{ file.id }}">{{ file.name }}</span>
					    										</a>
					    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
					    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.ok{% endtrans %}</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.cancel{% endtrans %}</a>
					    										
					    									{% else %}
					    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}">
					    											<span>{{ file.name }}</span>
					    										</a>
					    														    									
					    									{% endif %}
					    								{% else %}
					    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
					    										
					    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
					    											<i class="icon-pencil" style="float:left"></i>
					    										</a>   
					    										<span class="edit{{ file.id }}">{{ file.name }}</span>
					    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
					    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.ok{% endtrans %}</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">{% trans %}file.list.cancel{% endtrans %}</a>
					    										
					    									{% else %}
					    										<span>{{ file.name }}</span>
					    									{% endif %}
					    								{% endif %}
					    							
					    							</td>
					    							<td>
					    								{% if file.isDirectory()%}
					    									{% if file.size > 0 %}
					    										<!--  Calculating the rendering of size XXX or X Ko or X Mo or X Go or X To-->
						    									{% set size = file.size %}
						    									{% if size < 1000 %}
						    										{{ size|number_format(2, '.', ' ')}} {% trans %} file.size.unit {% endtrans %}
						    									{% elseif size <1000000 %}
						    										{% set size = file.size/1000 %}
						    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.kilo {% endtrans %}
						    									{% elseif size <1000000000 %}
						    										{% set size = file.size/1000000 %}
						    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.mega {% endtrans %}
						    									{% elseif size <1000000000000 %}
						    										{% set size = file.size/1000000000 %}
						    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.giga {% endtrans %}
						    									{% else %}
						    										{% set size = file.size/1000000000000 %}
						    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.tera {% endtrans %}
						    									{% endif %}
					    									{% else %}
					    										{% render "FileDFileBundle:File:getSizeDirectory" with {'id' : file.id} %}
					    									{% endif %}
					    								{% else %}
					    									<!--  Calculating the rendering of size XXX or X Ko or X Mo or X Go or X To-->
					    									{% set size = file.size %}
					    									{% if size < 1000 %}
					    										{{ size|number_format(2, '.', ' ')}} {% trans %} file.size.unit {% endtrans %}
					    									{% elseif size <1000000 %}
					    										{% set size = file.size/1000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.kilo {% endtrans %}
					    									{% elseif size <1000000000 %}
					    										{% set size = file.size/1000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.mega {% endtrans %}
					    									{% elseif size <1000000000000 %}
					    										{% set size = file.size/1000000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.giga {% endtrans %}
					    									{% else %}
					    										{% set size = file.size/1000000000000 %}
					    										{{ size|number_format(2, '.', ' ')}}	{% trans %} file.size.unit.tera {% endtrans %}
					    									{% endif %}
					    								{% endif %}
					    							</td>
					    							<td>{%if app.request.locale == "fr" %}
					    									{{ file.dateCreation|date('d-m-Y H:i:s') }}
					    								{%else %}
					    									{{ file.dateCreation|date('Y-m-d H:i:s') }}
					    								{% endif %}
					    							</td>
					    							<td>{{ file.author.username }} </td>
					    							<td>
					    								<a href="" onclick="download({{ file.id }})" title="{% trans %} file.list.name.download {% endtrans %}"><i class="icon-download"></i></a>
					    													    								
					    								{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
					    									<a href="" class="remove" title="{% trans %} file.list.name.delete {% endtrans %}" onclick="deleteFile({{ file.id }},{% if file.external %}true{% else %}false{% endif %})"><i class="icon-remove"></i></a>
					    								{% endif %}
					    								
					    								{% render "FileDFileBundle:File:isMarkAsSeenFile" with {'id' : file.id} %}
					    												    								
					    							</td>
					    						</tr>
					    					{% endfor %}
					    				</tbody>
					    			</table>
					    			
					    			
				    			<div class="span5">
				    				<!-- List of all selectable actions -->
				            		<input type="checkbox" id="selectall_seen" onclick="selectAll(1)"/>
				            		{% trans %} file.list.all.selectall {% endtrans %}
				            		<!-- Share/Delete/MarkAsSeen -->	
				            		<a title="{% trans %}file.list.all.share{% endtrans %}" href="#shareAllModal" data-toggle="modal" onclick="shareAll()"><i class="icon-share"></i></a>
				            		<a title="{% trans %}file.list.all.delete{% endtrans %}" href="" onclick="deleteAll(1)"><i class="icon-remove"></i></a>
				            		<a title="{% trans %}file.list.all.unmark{% endtrans %}" href="" onclick="markAll(1,0)"><i class="icon-ok"></i></a>
				            	</div>
			    				{% endif %}	
    					</div>
    				</fieldset>
    			</div>
    			
    			
    			<!-- Add file Modal -->
				<div id="addFileModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="addFileModal" aria-hidden="true">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h3 id="myModalLabel">{% trans %}file.list.addfile{% endtrans %}</h3>
					</div>
					<div class="modal-body">
						<!-- if admin choose share one from server or a new one -->
						{% render "FileDFileBundle:File:new" with { "file_id" : file_id } %}
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
					</div>
				</div>
				
				
    			<!-- Loading Modal -->
	    		<div id="loadingModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
					<div class="modal-body">
	    				<img src="{{ asset('bundles/filedfile/img/loading.gif') }}"/>
					</div>
				</div>
				
    			<!-- Share Modal -->
				<div id="shareModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="shareModal" aria-hidden="true">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h3 id="myModalLabel">{% trans %}file.list.name.share{% endtrans %}</h3>
					</div>
					<div class="modal-body">
					
					{% render "FileDFileBundle:File:shareFile" %}
						
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
					</div>
				</div>
				
    			<!-- ALL Share Modal -->
				<div id="shareAllModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="shareAllModal" aria-hidden="true">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h3 id="myModalLabel">{% trans %}file.list.name.share{% endtrans %}</h3>
					</div>
					<div class="modal-body">
						
						{% render "FileDFileBundle:File:shareAllFile" %}
						
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
					</div>
				</div>
								
				<!-- Style -->
				<style>
					<!--
					#addFileModal{
						width:800px;
					}
					
					#loadingModal{
						width:128px;
					}
					
					#filed_filebundle_filesharetype_users label{
						display:inline;
						margin-left:5px;
						margin-right:10px;
						width:50%;
						text-decoration:none !important;
					}
					
					#filed_filebundle_filesharetype label{
						text-decoration:underline;
					}
					
					#filed_filebundle_filesharetype_users input{
						display:inline;
						width:50%;
						clear:left;
					}
					
					#filestable{
						width: 90% !important;
						margin-left: 40px;
					}
					
					#dialog-confirm{
						display:none;
						visibility:hidden;
					}
					#show, #hide, .well legend p{
						float:left;
					}
					#show, #hide{
						margin-left:10px;
					}
					-->
				</style>
				
				<!-- Script for name edition -->
				<script type="text/javascript">
				
				<!-- Function which add a repository -->
				function addRepository(){
					//add a repository on current level with ajax request
					var DATA = {'id': {{ file_id }}};
					$.ajax({
						type: "POST",
						url: "{{ path('file_add_repository') }}",
						data: DATA,
						async:false,
						cache: false,
						success: function(data){
							document.location.reload(true);
							return false;
						},
						error: function(request,status,error){
							document.location.reload(true);
							return false;
						}
					});

				}
				<!--
				//Var choice option for delete
				var result=1;//1=only app, 2=app and physical

				//Defaults value at page loading
				hideSeenFiles();

			    //Hide seen files
				function hideSeenFiles(){
					$('#hide').css('visibility','hidden');
					$('#hide').css('display','none');
					$('#show').css('visibility','visible');
					$('#show').css('display','block');
					$('#seen_files').css('visibility','hidden');
					$('#seen_files').css('display','none');
				}
				//Show seen files
				function showSeenFiles(){
					$('#hide').css('visibility','visible');
					$('#hide').css('display','block');
					$('#show').css('visibility','hidden');
					$('#show').css('display','none');
					$('#seen_files').css('visibility','visible');
					$('#seen_files').css('display','block');
				}
				

				<!-- Function which delete a file or a repository 
					//param id the id of the file/repository
					//param isExternal define if the file is internal handled of the app or external (on the server)
				-->
				function deleteFile(id,isExternal){
				    if(isExternal){
						if(confirm("{% trans %} file.list.delete.confirm {% endtrans %}")){
							result = 2;
						}
				    }
				    else result = 2;
			       $('#loadingModal').modal('show');
					
					var DATA = {'id': id, 'choice': result};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_delete') }}",
			 			data: DATA,
			 			async:true,
			 			cache: false,
			 			success: function(data){
			 				//avoid full refresh
							$('#loadingModal').modal('hide');
			 				if(data=="true") $('.tr'+id).remove();
			 				return false;
			 			},
			 			error: function(request,status,error){
							$('#loadingModal').modal('hide');
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				}


				<!-- Function which edit the name of a repository or file
					//param id the id of the file/repository
				-->
				function editName(id){
				    $('#input'+id).css('visibility','visible');
				    $('#input'+id).css('display','block');
				    $('#btnok'+id).css('visibility','visible');
				    $('#btnok'+id).css('display','block');
				    $('#btncancel'+id).css('visibility','visible');
				    $('#btncancel'+id).css('display','block');
				    //hide text
				    $('.edit'+id).css('visibility','hidden');
				    $('.edit'+id).css('display','none');
				}


				<!-- Function which send data of new name
					//param id the id of the file/repository
					//param canSaved if the data is saved
				-->
				function sendData(id,canSaved){
					if(canSaved){
						var value = $('#input'+id).val();
				     	var DATA = {'id': id,'name': value};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_edit') }}",
				 			data: DATA,
				 			async:true,
				 			cache: false,
				 			success: function(data){
				 				//avoid full refresh
				 				$('.edit'+id).text(value);
				 				return false;
				 			},
				 			error: function(request,status,error){
				 				document.location.reload(true);
				 				return false;
				 			}
				 		});

					}
					//show text
				    $('.edit'+id).css('visibility','visible');
				    $('.edit'+id).css('display','inline');
					//hide form
				    $('#input'+id).css('display','none');
				    $('#btnok'+id).css('display','none');
				    $('#btncancel'+id).css('display','none');
				    
				    $('#input'+id).css('visibility','hidden');
				    $('#btnok'+id).css('visibility','hidden');
				    $('#btncancel'+id).css('visibility','hidden');

				}


				//When hiding the modal, refresh
				    $('#addFileModal').bind('hidden', function () {
				    	document.location.reload(true);
				    })
				//When hiding the modal, refresh
				    $('#shareModal').bind('hidden', function () {
				    	//document.location.reload(true);
				    })
				    
				//Prepare the add file from server action
				function addFilesServer(){
						$('#loadingModal').modal('show');
						var parent = $('#server_parent').val();
						var value = $('#server_dirpath').val();
				     	var DATA = {'id': parent,'path': value};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_add_file_server') }}",
				 			data: DATA,
				 			async:false,
				 			cache: false,
				 			success: function(data){
				 				//$('#addFileModal').hide();
								$('#loadingModal').modal('hide');
				 				return false;
				 			},
				 			error: function(request,status,error){
								$('#loadingModal').modal('hide');
				 				//document.location.reload(true);
				 				return false;
				 			}
				 		});
				}

				
				<!-- Function which share a file or a repository 
					//param id the id of the file/repository
				-->
				function share(id){

					$('#loadingModal').modal('show');
					//Set all checkboxes to unchecked
					$('#filed_filebundle_filesharetype_users').attr('checked','');
					$('#filed_filebundle_filesharetype_id').val(id);
					//array key=file_id and content= usernames
					var txt_usershare = "{{ txt_usershare }}";
					var tab_usershare = txt_usershare.split(';');
					
					var FileuserShare = new Array();
					for(var i=0;i<tab_usershare.length;i++){
						var tab = tab_usershare[i].split(':');
						if(tab[0] == id){//find matching file id
							var usernames = tab[1];
							//Split usernames
							var tab_usernames = usernames.split(',');
							for(var j=0;j<tab_usernames.length;j++){
								//Find the usernames already shared in the form
								var labels = $('#filed_filebundle_filesharetype_users label');
								
								var username = tab_usernames[j];
								for(var k =0;k<labels.length;k++){
									if(labels[k].innerHTML == username){
										//checked the input element
										var id_input = '#'+labels[k].htmlFor;
										//document.getElementById(id_input).attributeName = 'checked';
										$(id_input).attr('checked','checked');
									}
								}
								
							}
						} 
						
					}
					var fileid = {{ file_id }}
					$('#current_url_file').val(fileid);

					$('#loadingModal').modal('hide');
					return true;
				} 

				//Share files checked with users checked in modal box
				
				
				<!-- Function which share all files or repositories selected 
				-->
				function shareAll(){
					//get files checked and put in input
					$('#files_share_input').prop("value","");
					var fileid = {{ file_id }}
					$('.share_all #current_url_file').val(fileid);
					$('.share_all #filed_filebundle_filesharetype_id').val(fileid);
					
					$('#filestable input:checked').each(function(){
						$('#files_share_input').prop("value",$("#files_share_input").val()+";"+$(this).prop("value"));
					});
				}

				<!-- Function which mark a file or a repository as seen
					//param id the id of the file/repository
					//param if the file have to be marked or unmarked
				-->
				function markAsSeen(id,marked){
					$('#loadingModal').modal('show');
			     	var DATA = {'id': id, 'marked':marked};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_mark_as_seen') }}",
			 			data: DATA,
			 			async:true,
			 			cache: false,
			 			success: function(data){
							$('#loadingModal').modal('hide');
			 				//document.location.reload(true);
			 				return false;
			 			},
			 			error: function(request,status,error){
							$('#loadingModal').modal('hide');
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				} 

				<!-- Function which mark  files or  repositories as seen
				//param type (0: not seen files panel, 1: seen files panel)
				//param marked (0: to mark, 1: to unmark)
				-->
				function markAll(type,marked){
			 		$('#loadingModal').modal('show');
					var uid="not_seen_box";
					if(type==1){//not seen files
						uid="box_seen";
					}
					$('#filestable input:checked').each(function(){

						id=$(this).prop("value");
                        var DATA = {'id': id, 'marked':marked};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_mark_as_seen') }}",
				 			data: DATA,
				 			async:false,
				 			cache: false,
				 			success: function(data){
				 				return false;
				 			},
				 			error: function(request,status,error){
				 				return false;
				 			}
				 		});
					});
					$('#loadingModal').modal('hide');
                    document.location.reload(true);
					return true;
				} 

				<!-- Function which refresh a repository
					//param id the id of the repository
				-->
				function refresh(id){
					$('#loadingModal').modal('show');
			     	var DATA = {'id': id};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_refresh') }}",
			 			data: DATA,
			 			async:true,
			 			cache: false,
			 			success: function(data){
							$('#loadingModal').modal('hide');
			 				document.location.reload(true);
			 				return false;
			 			},
			 			error: function(request,status,error){
							$('#loadingModal').modal('hide');
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				} 


				<!-- Function which download a repository or file
					//param id the id of the repository/file
				-->
				function download(id){
					$('#loadingModal').modal('show');
			     	var DATA = {'id': id};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_download') }}",
			 			data: DATA,
			 			async:true,
			 			cache: false,
			 			success: function(data){
							$('#loadingModal').modal('hide');
			 				return false;
			 			},
			 			error: function(request,status,error){
							$('#loadingModal').modal('hide');
			 				return false;
			 			}
			 		});
				} 

				<!-- Function which select all files 
					//param type (0: not seen files panel, 1: seen files panel)
				-->
				function selectAll(type){
					if(type==0){//not seen files
						$('input:checkbox[id=not_seen_box]').prop('checked', $('input:checkbox[id=selectall]').prop('checked'));
					}
					else{//seen files
						$('input:checkbox[id=box_seen]').prop('checked',$('input:checkbox[id=selectall_seen]').prop('checked'));
					}
					 
				}

				<!-- Function which delete all files selected
					//param type (0: not seen files panel, 1: seen files panel)
				-->
				function deleteAll(type)
				{
					$('#loadingModal').modal('show');
					var uid="not_seen_box";
					if(type==1){//not seen files
						uid="box_seen";
					}
					$('input:checkbox[id^="'+uid+'"]:checked').each(function(){
						id=$(this).prop("value");

						var DATA = {'id': id, 'choice': 2};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_delete') }}",
				 			data: DATA,
				 			async:false,
				 			cache: false,
				 			success: function(data){
				 				//avoid full refresh
				 				//if(data=="true") $('.tr'+id).remove();
                                 return false;
				 			},
				 			error: function(request,status,error){
                                 return false;
				 			}
				 		});
					});
					$('#loadingModal').modal('hide');
                    document.location.reload(true);
					return true;
					
				}

				</script>
				            	
         
