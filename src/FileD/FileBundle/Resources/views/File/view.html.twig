<!-- Rendered by userBundle:Index : display all files-->

           
            	<!-- Display home content FILES-->
            	<div class="well">
            		<fieldset >
		 				<legend>{% trans %}file.list.title{% endtrans %}</legend>
		            	<div class="row">
		            		
	            			{% if parent_id == 0 %}
	            				<a class="span3 " href="{{ path('user_index') }}"><i class="icon-folder-open"></i>{% trans %} file.list.parent {% endtrans %}</a>		            
	            			{% elseif parent_id > 0 %}
	            				<a class="span3 " href="{{ path('user_index') }}?file={{ parent_id }}"><i class="icon-folder-open"></i>{% trans %} file.list.parent {% endtrans %}</a>		            			
	            			{% endif %}
		            		<div class="span3 offset8">
		            			{% if enable_upload =="1" %}
			            			<a href="#addFileModal" data-toggle="modal" ><i class="icon-plus"></i>{% trans %}file.list.addfile{% endtrans %}</a><br/>
			            			{% if is_granted("ROLE_ADMIN")%}
			            				<a href="#" onclick="addRepository()" ><i class="icon-plus"></i>{% trans %}file.list.addrepository{% endtrans %}</a>
		            				{% endif %}
			            		{% endif %}
		            		</div>
		            			
			    				{% if files is empty %}
			    					<p class="text-error span2 offset2">{% trans %}file.list.nofilesfound{% endtrans %}</p>
			    				{% else %}
					            	<table id="filestable" class="table table-striped span9" >
					            		<thead>
					            			<tr>
					            				<th>{% trans %}file.list.name{% endtrans %}</th>
					            				<th>{% trans %}file.list.size{% endtrans %}</th>
					            				<th>{% trans %}file.list.addedon{% endtrans %}</th>
					            				<th>{% trans %}file.list.addedby{% endtrans %}</th>
					            				<th>{% trans %}file.list.actions{% endtrans %}</th>	
					            			</tr>
					            		</thead>
					            		<tbody>
					    					{% for file in files %}
					    						<tr class="tr{{ file.id }}">
					    							<td>
					    								{% if file.isDirectory() %}
					    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
					    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
					    											<i class="icon-pencil" style="float:left"></i>
					    										</a>  
					    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}" >
					    											<span class="edit{{ file.id }}">{{ file.name }}</span>
					    										</a>
					    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
					    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">OK</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">Cancel</a>
					    										
					    									{% else %}
					    										<a href="{{ path('user_index', {'file' : file.id}) }}" title="{% trans %}file.list.name.access{% endtrans %}" onclick="editName('edit{{ file.id }}')" ><i class="icon-share-alt"></i></a><span>{{ file.name }}</span>
					    														    									
					    									{% endif %}
					    								{% else %}
					    									{% if file.author.username == app.user.username or is_granted("ROLE_ADMIN")%}
					    										<a href='#' onclick="editName({{ file.id }});" title="{% trans %}file.list.name.edit{% endtrans %}">
					    											<i class="icon-pencil" style="float:left"></i>
					    										</a>   
					    										<span class="edit{{ file.id }}">{{ file.name }}</span>
					    										<input type="text" name="input{{ file.id }}" id="input{{ file.id }}" value="{{ file.name }}" style="visibility:hidden;display:none;float:left;"/>
					    										<a href="#" class="btn" onclick="sendData({{ file.id }},true)" id="btnok{{ file.id }}" style="visibility:hidden;display:none;float:left;">OK</a> <a href="#" class="btn" onclick="sendData({{ file.id }},false)" id="btncancel{{ file.id }}" style="visibility:hidden;display:none;float:left;">Cancel</a>
					    										
					    									{% endif %}
					    								{% endif %}
					    							
					    							</td>
					    							<td>
					    								{% if file.isDirectory() and file.size == 0 %}
					    									
					    									{% render "FileDFileBundle:File:getSizeDirectory" with {'id' : file.id} %}
					    									
					    								{% else %}
					    									<!--  Calculating the rendering of size XXX or X Ko or X Mo or X Go or X To-->
					    									{% set size = file.size %}
					    									{% if size < 1000 %}
					    										{{ file.size }} {% trans %} file.size.unit {% endtrans %}
					    									{% elseif size <1000000 %}
					    										{{ file.size / 1000}}	{% trans %} file.size.unit.kilo {% endtrans %}
					    									{% elseif size <1000000000 %}
					    										{{ file.size / 1000000}}	{% trans %} file.size.unit.mega {% endtrans %}
					    									{% elseif size <1000000000000 %}
					    										{{ file.size / 1000000000}}	{% trans %} file.size.unit.giga {% endtrans %}
					    									{% else %}
					    										{{ file.size / 1000000000000}}	{% trans %} file.size.unit.tera {% endtrans %}
					    									{% endif %}
					    								{% endif %}
					    							</td>
					    							<td>{{ file.dateCreation|date('Y-m-d H:i:s') }}</td>
					    							<td>{{ file.author.username }}</td>
					    							<td>
					    								<a href="{{ path('file_download' , {'id':file.id} ) }}" title="Download"><i class="icon-download"></i></a>
					    								
					    								{% render "FileDFileBundle:File:viewFile" with {'id' : file.id } %}
					    								
					    								{% if (file.author.username == app.user.username and enable_share =="1") or is_granted("ROLE_ADMIN") %}
					    									{% set titleShare %}{% trans %} file.share.ahref.title {% endtrans %}{% set i =1 %} {% for user in file.usersShare %}{{ user.username }}{% if i<file.usersShare|length %},{% endif %}{% set i=i+1 %} {% endfor %}{% endset %}
					    									<a title="{{ titleShare }}" href="#shareModal" data-toggle="modal" onclick="share({{ file.id }})"><i class="icon-share"></i></a>
					    								{% endif %}
					    								
					    								{% if file.author.username == app.user.username or  is_granted("ROLE_ADMIN")%}
					    									<a href="" title="{% trans %} file.list.name.delete {% endtrans %}" onclick="deleteFile({{ file.id }})"><i class="icon-remove"></i></a>
					    								{% endif %}
					    								
					    								{% render "FileDFileBundle:File:isMarkAsSeenFile" with {'id' : file.id } %}
					    								
					    								{% if is_granted("ROLE_ADMIN") and file.getExternal() and file.isDirectory() %}
					    									<a href="" title="{% trans %} file.list.name.refresh {% endtrans %}" onclick="refresh({{ file.id }})"><i class="icon-refresh"></i></a>
					    								{% endif %}
					    								
					    							</td>
					    						</tr>
					    					{% endfor %}
					    				</tbody>
					    			</table>
			    				{% endif %}	
			    		</div>
		    		</fieldset>
    			</div>
    			
    			
    			<!-- Add file Modal -->
				<div id="addFileModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="addFileModal" aria-hidden="true">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h3 id="myModalLabel">{% trans %}file.list.addfile{% endtrans %}</h3>
					</div>
					<div class="modal-body">
						<!-- if admin choose share one from server or a new one -->
						{% render "FileDFileBundle:File:new" with { "file_id" : file_id } %}
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
					</div>
				</div>
				
				
    			<!-- Loading Modal -->
	    		<div id="loadingModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
					<div class="modal-body">
	    				<img src="{{ asset('bundles/filedfile/img/loading.gif') }}"/>
					</div>
				</div>
				
    			<!-- Share Modal -->
				<div id="shareModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="shareModal" aria-hidden="true">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h3 id="myModalLabel">{% trans %}file.list.name.share{% endtrans %}</h3>
					</div>
					<div class="modal-body">
					
						{% render "FileDFileBundle:File:shareFile" %}
						
					</div>
					<div class="modal-footer">
						<button class="btn" data-dismiss="modal" aria-hidden="true">{% trans %}file.list.close{% endtrans %}</button>
					</div>
				</div>
				
				<!-- Style -->
				<style>
					<!--
					#addFileModal{
						width:800px;
					}
					
					#filed_filebundle_filesharetype_users label{
						display:inline;
						margin-left:5px;
						margin-right:10px;
						width:50%;
					}
					
					#filed_filebundle_filesharetype_users input{
						display:inline;
						width:50%;
						clear:left;
					}
					-->
				</style>
				
				<!-- Script for name edition -->
				<script type="text/javascript">
				<!--
				//Delete a file or directory
				function deleteFile(id){
					$('#loadingModal').modal('show');
					var DATA = {'id': id};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_delete') }}",
			 			data: DATA,
			 			async:false,
			 			cache: false,
			 			success: function(data){
			 				//avoid full refresh
							$('#loadingModal').modal('hide');
			 				if(data=="true") $('.tr'+id).remove();
			 				return false;
			 			},
			 			error: function(request,status,error){
							$('#loadingModal').modal('hide');
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				}

				//Prepare edition of name directory
				function editName(id){
				    $('#input'+id).css('visibility','visible');
				    $('#input'+id).css('display','block');
				    $('#btnok'+id).css('visibility','visible');
				    $('#btnok'+id).css('display','block');
				    $('#btncancel'+id).css('visibility','visible');
				    $('#btncancel'+id).css('display','block');
				    //hide text
				    $('.edit'+id).css('visibility','hidden');
				    $('.edit'+id).css('display','none');
				}

				//Send data to be saved
				function sendData(id,canSaved){
					if(canSaved){
						var value = $('#input'+id).val();
				     	var DATA = {'id': id,'name': value};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_edit') }}",
				 			data: DATA,
				 			async:false,
				 			cache: false,
				 			success: function(data){
				 				//avoid full refresh
				 				$('.edit'+id).text(value);
				 				return false;
				 			},
				 			error: function(request,status,error){
				 				document.location.reload(true);
				 				return false;
				 			}
				 		});

					}
					//show text
				    $('.edit'+id).css('visibility','visible');
				    $('.edit'+id).css('display','inline');
					//hide form
				    $('#input'+id).css('display','none');
				    $('#btnok'+id).css('display','none');
				    $('#btncancel'+id).css('display','none');
				    
				    $('#input'+id).css('visibility','hidden');
				    $('#btnok'+id).css('visibility','hidden');
				    $('#btncancel'+id).css('visibility','hidden');

				}


				//When hiding the modal, refresh
				    $('#addFileModal').bind('hidden', function () {
				    	document.location.reload(true);
				    })
				//When hiding the modal, refresh
				    $('#shareModal').bind('hidden', function () {
				    	document.location.reload(true);
				    })
				    
				//Prepare the add file from server action
				function addFilesServer(){
						$('#loadingModal').modal('show');
						var parent = $('#server_parent').val();
						var value = $('#server_dirpath').val();
				     	var DATA = {'id': parent,'path': value};
				 		$.ajax({
				 			type: "POST",
				 			url: "{{ path('file_add_file_server') }}",
				 			data: DATA,
				 			async:false,
				 			cache: false,
				 			success: function(data){
				 				//$('#addFileModal').hide();
								$('#loadingModal').modal('hide');
				 				return false;
				 			},
				 			error: function(request,status,error){
								$('#loadingModal').modal('hide');
				 				//document.location.reload(true);
				 				return false;
				 			}
				 		});
				}

				//Share a repository (and all content) or a file to another user
				function share(id){

					//Set all checkboxes to unchecked
					$('#filed_filebundle_filesharetype_users').attr('checked','');
					$('#filed_filebundle_filesharetype_id').val(id);
					//array key=file_id and content= usernames
					var txt_usershare = "{{ txt_usershare }}";
					var tab_usershare = txt_usershare.split(';');
					
					var FileuserShare = new Array();
					for(var i=0;i<tab_usershare.length;i++){
						var tab = tab_usershare[i].split(':');
						if(tab[0] == id){//find matching file id
							var usernames = tab[1];
							//Split usernames
							var tab_usernames = usernames.split(',');
							for(var j=0;j<tab_usernames.length;j++){
								//Find the usernames already shared in the form
								var labels = $('#filed_filebundle_filesharetype_users label');
								var username = tab_usernames[j];
								for(var i =0;i<labels.length;i++){
									if(labels[i].innerHTML == username){
										//checked the input element
										var id_input = '#'+labels[i].htmlFor;
										//document.getElementById(id_input).attributeName = 'checked';
										$(id_input).attr('checked','checked');
									}
								}
								
							}
						} 
						
					}
						
					return true;
				} 


				//Mark a file as seen (file or repository and its content)
				function markAsSeen(id){
			     	var DATA = {'id': id};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_mark_as_seen') }}",
			 			data: DATA,
			 			async:false,
			 			cache: false,
			 			success: function(data){
			 				document.location.reload(true);
			 				return false;
			 			},
			 			error: function(request,status,error){
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				} 


				// Refresh repository and its content)
				function refresh(id){
			     	var DATA = {'id': id};
			 		$.ajax({
			 			type: "POST",
			 			url: "{{ path('file_refresh') }}",
			 			data: DATA,
			 			async:false,
			 			cache: false,
			 			success: function(data){
			 				document.location.reload(true);
			 				return false;
			 			},
			 			error: function(request,status,error){
			 				document.location.reload(true);
			 				return false;
			 			}
			 		});
				} 

				//-->
				</script>
				            	
         